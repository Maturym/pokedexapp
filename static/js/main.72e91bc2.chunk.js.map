{"version":3,"sources":["components/PokemonTypes/PokemonTypes.js","components/PokemonList/PokemonList.js","img/pikachu.svg","img/pokeball.svg","components/Navbar/Navbar.js","services/getData.js","components/Pagination/Pagination.js","img/pokemon-animation.gif","components/Animation/Animation.js","components/PokemonLocation/PokemonLocation.js","components/PokemonCard/PokemonCard.js","img/gotcha.svg","components/Search/Search.js","App.js","index.js"],"names":["PokemonTypes","type","filterByType","to","name","className","onClick","e","target","textContent","PokemonList","pokemonData","getPokemonData","map","id","types","closest","src","alt","Navbar","updateData","mainLogo","pokedexLogo","getData","fetchData","url","handler","axios","get","then","res","data","pokemonInfo","results","loadingPokemons","Promise","all","pokemon","a","pokemonRecord","_pokemonData","Pagination","postsPerPage","totalPosts","currentPage","paginate","fetchPokemonData","first","last","openData","pageNumbers","maxRight","maxLeft","Math","ceil","i","push","window","location","pathname","includes","number","indexOfFirstPost","Animation","props","animation","PokemonLocation","locationURL","filterByLocation","useState","locationOfPokemon","setLocation","useEffect","length","location_area","split","PokemonCard","ability","setAbility","height","stats","weight","abilities","location_area_encounters","scrollTo","abilityURL","document","querySelectorAll","forEach","item","index","style","top","base_stat","sliced","englishElem","effect_entries","find","language","documentElement","clientWidth","effect","slice","toUpperCase","querySelector","classList","add","remove","data-value","Search","handleChange","getEvent","search","required","onChange","preventDefault","searchLogo","App","setPokemonData","setTotalPosts","pokemonType","setPokemonType","setPokemonInfo","setCurrentPage","setSearch","input","setInput","loading","setLoading","firstURL","lastURL","indexOfLastPost","slicedURLArray","dataWithPokemons","pageNumber","typeName","pokemonURLArray","p","locationName","dataURL","areas","pokemon_encounters","pokemonByLocationURL","filteredDataName","filteredData","filter","value","toLowerCase","path","render","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72e91bc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './pokemonTypes.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokemonTypes = ({ type , filterByType }) => {\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Link\r\n      to={`/type/${type.name}`} \r\n        className={`card-tag background-color-${type.name}`}\r\n        onClick={(e) => {\r\n          filterByType(e.target.textContent)\r\n        }}\r\n      >\r\n      {type.name}\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PokemonTypes;\r\n","import React from 'react';\r\nimport './PokemonList.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PokemonTypes from '../PokemonTypes/PokemonTypes'\r\n// import filterByType from '../../App'\r\n\r\nconst PokemonList = ({ pokemonData, filterByType, getPokemonData }) => {\r\n\r\n  \r\n  return (\r\n        <div className=\"cards\">\r\n          {pokemonData.map(({ id, name, types }) => (\r\n            <Link\r\n              to={`/card/${name}`}\r\n              id={id}\r\n              onClick={(e) => {\r\n                const target = e.target.closest('.card')\r\n                getPokemonData(target.id)\r\n              }} \r\n              key={id} className = \"card\">\r\n              <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"\" className=\"card-img\"/>\r\n              <div className=\"card-info\">\r\n                <h3 className=\"card-id\">№{id<10 ? \"00\"+id : id>=10 && id<100 ? \"0\"+id: id}</h3>\r\n                <h1 className=\"card-title\">{name}</h1>\r\n                 <div className=\"card-tags\">\r\n                  {types.map(({ type }) => (\r\n                    <PokemonTypes type={type} filterByType={filterByType}  key={type.name} />\r\n                  ))}\r\n                </div> \r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n\r\n  )\r\n}\r\nexport default PokemonList;\r\n","export default __webpack_public_path__ + \"static/media/pikachu.f8578816.svg\";","export default __webpack_public_path__ + \"static/media/pokeball.76612ad7.svg\";","import React from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport mainLogo from '../../img/pikachu.svg';\r\nimport pokedexLogo from '../../img/pokeball.svg';\r\n\r\nexport default function Navbar({updateData}) {\r\n  return (\r\n      <header>\r\n        <ul className=\"header__nav\">\r\n          <li className=\"nav__link\">\r\n            <Link \r\n              to = \"/pokedexapp/\"\r\n              onClick={() => {\r\n                updateData()\r\n              }}>\r\n              <img src={mainLogo} alt=\"main-logo\" className=\"nav__link--img\"/>\r\n              <h3 className=\"nav__link--text\">Главная</h3>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav__link\">\r\n            <Link \r\n              to = '/search'>\r\n              <img src={pokedexLogo} alt=\"search-logo\" className=\"nav__link--img\"/>\r\n              <h3 className=\"nav__link--text\">Покедекс</h3>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n    </header>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\nconst getData = {\r\n  async fetchData (url, handler) {\r\n    let pokemonInfo = await axios.get(url).then(res =>  res.data)\r\n  \r\n    handler(pokemonInfo.results || pokemonInfo);\r\n  },\r\n  \r\n  \r\n    async loadingPokemons (data, handler) {\r\n      let _pokemonData = await Promise.all(\r\n        data.map(async pokemon => {\r\n          let pokemonRecord = await axios.get(pokemon.url).then(res => res.data)\r\n          return pokemonRecord;\r\n        })\r\n      )\r\n      handler(_pokemonData);\r\n    },\r\n}\r\n\r\nexport default getData;\r\n\r\n\r\n","import React from 'react';\r\nimport './Pagination.css';\r\nimport getData from '../../services/getData';\r\n\r\nexport default function Pagination({ postsPerPage, totalPosts, currentPage,\r\n   paginate, fetchPokemonData, first, last, openData }) {\r\n\r\n  const pageNumbers = [];\r\n\r\n    let maxRight = 0;\r\n    let maxLeft = 0;\r\n\r\n  if (Math.ceil(totalPosts / postsPerPage) <= 5) {\r\n    maxRight = Math.ceil(totalPosts / postsPerPage);\r\n    maxLeft = 1;\r\n  } else {\r\n    maxRight = +(currentPage + 3) <= Math.ceil(totalPosts / postsPerPage) ? currentPage + 3 : Math.ceil(totalPosts / postsPerPage);\r\n    maxLeft = currentPage - 3 >= 1 ? currentPage - 3 : 1;\r\n  }\r\n   \r\n  \r\n  for (let i = maxLeft; i <=maxRight; i++){\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"btn\">\r\n    {window.location.pathname.includes('/pokedexapp') ? \r\n      currentPage !== 1? <button onClick={first}>First</button>: null : null\r\n    }\r\n    {pageNumbers.map(number => (\r\n       <button key={number} className={currentPage === number ? 'active' : null}\r\n       onClick={() => {\r\n        const indexOfLastPost = number*postsPerPage <= 890? number*postsPerPage: 890;\r\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n        \r\n        paginate(number);\r\n\r\n        if (window.location.pathname.includes('/pokedexapp/')) {\r\n          fetchPokemonData(`https://pokeapi.co/api/v2/pokemon?offset=${indexOfFirstPost}&limit=${postsPerPage}`);\r\n        }\r\n\r\n        if (window.location.pathname.includes('/type')){\r\n          openData(number);\r\n         }\r\n        \r\n        }}\r\n         >\r\n           {number}\r\n       </button>\r\n    ))}\r\n    {window.location.pathname.includes('/pokedexapp') ? \r\n      currentPage !== Math.ceil(totalPosts / postsPerPage)? \r\n    <button onClick={last}>Last</button>: null : null\r\n    }\r\n </div> \r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pokemon-animation.817f44d7.gif\";","import React from 'react';\r\nimport animation from '../../img/pokemon-animation.gif';\r\nimport './Animation.css';\r\n\r\nconst Animation = props => {\r\n  return (\r\n      <div className=\"animation-wrapper\">\r\n        <img className=\"animation\" src={animation} /> \r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Animation\r\n","import React, { useState, useEffect } from 'react';\r\nimport './PokemonLocation.css';\r\nimport getData from '../../services/getData';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PokemonLocation = ({ locationURL, filterByLocation }) => {\r\n  \r\n  const [locationOfPokemon, setLocation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData.fetchData(locationURL, setLocation);\r\n  }, [locationURL])  \r\n\r\n if (!locationOfPokemon.length) {\r\n\r\n  return (\r\n    <div className=\"card-tags card-page-location\">\r\n      <div className=\"card-tag card-tag-location\">\r\n          <span>Этого покемона нельзя поймать</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n } else {\r\n\r\n    return (\r\n      <div className=\"tags-container\">\r\n        {locationOfPokemon.map(({ location_area }) => (\r\n          <Link \r\n          to={`/location/${location_area.name}`} \r\n          onClick={(e) => {\r\n            filterByLocation(e.target.textContent)\r\n          }}\r\n            className=\"card-tags card-page-location\"> \r\n            <div className=\"card-tag card-tag-location\" id={location_area.name.split('-area')[0]} key={location_area.name}>\r\n              {location_area.name.split('-area')[0]}\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokemonLocation\r\n","import React, { useState, useEffect } from 'react';\r\nimport './PokemonCard.css';\r\nimport PokemonTypes from '../PokemonTypes/PokemonTypes';\r\nimport getData from '../../services/getData';\r\nimport PokemonLocation from '../PokemonLocation/PokemonLocation';\r\n\r\nconst PokemonCard = ({ pokemonInfo, filterByType, filterByLocation }) => {\r\n\r\n  const [ability, setAbility] = useState('');\r\n\r\n  const getAbility = (url) => {\r\n\r\n    getData.fetchData(url, data => {\r\n\r\n      const dataEffects = data.effect_entries;\r\n      let sliced = '';\r\n\r\n      const englishElem = dataEffects.find((item) => {\r\n        if (item.language.name === 'en') {return item};\r\n      })\r\n\r\n      if (document.documentElement.clientWidth <= 770 && document.documentElement.clientWidth > 320){\r\n        sliced = englishElem.effect.slice(0,339);\r\n \r\n       if (sliced.length < englishElem.effect.length) {\r\n         sliced += '...';\r\n       }\r\n \r\n       setAbility(sliced);\r\n \r\n     } else if (document.documentElement.clientWidth <= 320) {\r\n         sliced = englishElem.effect.slice(0,200);\r\n \r\n         if (sliced.length < englishElem.effect.length) {\r\n         sliced += '...';\r\n         }\r\n         setAbility(sliced);\r\n\r\n     } else if (document.documentElement.clientWidth > 320){\r\n \r\n       sliced = englishElem.effect.slice(0,380);\r\n \r\n         if (sliced.length < englishElem.effect.length) {\r\n         sliced += '...';\r\n         }\r\n       setAbility(sliced)\r\n     }  \r\n\r\n    })\r\n\r\n  };\r\n\r\n\r\n  if (pokemonInfo.length != 0) {\r\n\r\n    const { height, id ,name, stats, types, weight, abilities, location_area_encounters: location } = pokemonInfo;\r\n\r\n\r\n    window.scrollTo(0,0);  \r\n\r\n    const abilityURL = abilities[0].ability.url;\r\n\r\n    const meter = document.querySelectorAll('.meter');\r\n\r\n    meter.forEach((item, index) => {\r\n      item.style.top = 100 - stats[index].base_stat + '%';\r\n\r\n    });\r\n\r\n    getAbility(abilityURL);\r\n\r\n\r\n    return (\r\n      <div className=\"main-wrapper\">\r\n        <h1 className=\"pokemon-name\">{name.toUpperCase()}\r\n          <span className=\"pokemon-id\">№{id<10 ? \"00\"+id : id>=10 && id<100 ? \"0\"+id : id}</span>\r\n        </h1>\r\n        <div className=\"card-block\">\r\n          <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"\" className=\"card-left-img\"/>\r\n            <div className=\"card-left\">\r\n            <div className=\"pokemon-info\">\r\n                <ul>\r\n                  <li className=\"pokemon-par\">Height</li>\r\n                  <li className=\"pokemon-par\">{height}.0 m</li>\r\n                  <li className=\"pokemon-par\">Weight</li>\r\n                  <li className=\"pokemon-par\">{weight}.0 kg</li>\r\n                  <li className=\"pokemon-par\">Gender</li>\r\n                  <li className=\"pokemon-par\">\r\n                    <span className=\"pokemon-sex background-color-male\">Male</span>\r\n                    <span className=\"pokemon-sex background-color-female\">Female</span>\r\n                  </li>\r\n                </ul>\r\n                <ul>\r\n                  <li className=\"pokemon-par\">Category</li>\r\n                  <li className=\"pokemon-par\">Seed</li>\r\n                  <li className=\"pokemon-par\">Abilities</li>\r\n                  <li className=\"pokemon-par overgrow\">{abilities[0].ability.name.toUpperCase()}</li>\r\n                </ul>\r\n                <div className=\"pokemon-info-close-toggle\"\r\n                  onClick={() =>{\r\n                    document.querySelector('.pokemon-info-close').classList.add('active');\r\n                    document.querySelector('.pokemon-info').classList.add('active');\r\n                  }}\r\n                  >\r\n                  ?</div>\r\n              </div>\r\n              <div className=\"pokemon-info pokemon-info-close\">\r\n                <div className=\"info-close-btn\"\r\n                onClick={() =>{\r\n                  document.querySelector('.pokemon-info-close').classList.remove('active');\r\n                  document.querySelector('.pokemon-info').classList.remove('active');\r\n                }}\r\n                >\r\n                X</div>\r\n                <h2 className=\"info-close\">Ability info</h2>\r\n                <h3 className=\"info-ability-title\">{abilities[0].ability.name.toUpperCase()}</h3>\r\n                <p className=\"info-ability-descr\">\r\n                  {ability}\r\n                </p>\r\n              </div>\r\n              <div className=\"tags\">\r\n                <div className=\"tags-types\">\r\n                  <div className=\"tags-title\">Types</div>\r\n                  <div className=\"card-tags card-page\">\r\n                  {types.map(({ type }) => (\r\n                    <PokemonTypes type={type} filterByType={filterByType}  key={type.name} />\r\n                  ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"tags-location\">\r\n                  <div className=\"tags-title\">Location</div>\r\n                                       \r\n                    <PokemonLocation locationURL={location} filterByLocation={filterByLocation} />          \r\n\r\n                </div>\r\n              </div>          \r\n              </div>\r\n            </div>\r\n            <div className=\"card-right\">\r\n            <div className=\"card-stats\">\r\n              <h3 className=\"stats-title\">Stats</h3>\r\n              <ul className=\"stats-links\">\r\n                <li className=\"stats-link\">\r\n                  <ul className=\"stats-column\">\r\n                    <li className=\"meter\" data-value=\"3\"></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                  </ul>\r\n                  <span className=\"state\">HP</span>\r\n                </li>\r\n                <li className=\"stats-link\">\r\n                  <ul className=\"stats-column\">\r\n                    <li className=\"meter\" data-value=\"3\"></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                  </ul>\r\n                  <span className=\"state\">Attack</span>\r\n                </li>\r\n                <li className=\"stats-link\">\r\n                  <ul className=\"stats-column\">\r\n                    <li className=\"meter\" data-value=\"3\"></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                  </ul>\r\n                  <span className=\"state\">Defense</span>\r\n                </li>\r\n                <li className=\"stats-link\">\r\n                  <ul className=\"stats-column\">\r\n                    <li className=\"meter\" data-value=\"3\"></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                  </ul>\r\n                  <span className=\"state\">Special<br /> Attacks</span>\r\n                </li>\r\n                <li className=\"stats-link\">\r\n                  <ul className=\"stats-column\">\r\n                    <li className=\"meter\" data-value=\"3\"></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                  </ul>\r\n                  <span className=\"state\">Special<br /> Defense</span>\r\n                </li>\r\n                <li className=\"stats-link\">\r\n                  <ul className=\"stats-column\">\r\n                    <li className=\"meter\" data-value=\"3\"></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                    <li></li>\r\n                  </ul>\r\n                  <span className=\"state\">Speed</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          </div>\r\n    )\r\n\r\n  } \r\n  else return null;\r\n}\r\n\r\nexport default PokemonCard;\r\n","export default __webpack_public_path__ + \"static/media/gotcha.e931f353.svg\";","import React, { useState } from 'react';\r\nimport './Search.css';\r\nimport searchLogo from '../../img/gotcha.svg';\r\nimport getData from '../../services/getData'\r\n\r\nconst Search = ({handleChange, search, getEvent }) => {\r\n\r\n\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=0&limit=890';\r\n\r\n\r\n  return (\r\n    <div className=\"input\">\r\n      <form className=\"search-form\">\r\n        <label>Введите имя \r\n          <input type=\"text\" className=\"input__pokemon-name\" required\r\n          onChange = {getEvent}\r\n          />\r\n          \r\n        </label>\r\n      {/* <div className=\"dropdown-container\">\r\n        <ul className=\"dropdown dropdown__pokemon-name\">\r\n          {search.map((name) => (\r\n            <li className=\"drop-down-link\" key={name}>{name}</li>\r\n          ))}\r\n        </ul>\r\n      </div> */}\r\n\t\t\t<button\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        handleChange();\r\n      }} \r\n      className=\"search-btn\"\r\n      ><img src={searchLogo} className=\"search-img\"/></button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState, useEffect } from 'react';\nimport PokemonList from './components/PokemonList/PokemonList';\nimport Navbar from './components/Navbar/Navbar';\nimport Pagination from './components/Pagination/Pagination';\nimport getData from './services/getData';\nimport Animation from './components/Animation/Animation';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './app.css';\n//import PokemonTypes from './components/PokemonTypes/PokemonTypes';\nimport PokemonCard from './components/PokemonCard/PokemonCard';\nimport Search from './components/Search/Search'\n\n\nfunction App() {\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [totalPosts, setTotalPosts] = useState(890)\n  const [pokemonType, setPokemonType] = useState([]);\n\n  const [pokemonInfo,setPokemonInfo] = useState([]);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [search, setSearch] = useState([]);\n\n  const [input, setInput] = useState('');\n  \n  const [postsPerPage, setPostsPerPage] = useState(20)\n  const [loading, setLoading] = useState(true);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon';\n  const allTypes = 'https://pokeapi.co/api/v2/type/';\n  const allLocation = 'https://pokeapi.co/api/v2/location/?offset=0&limit=780';\n\n  const firstURL = `https://pokeapi.co/api/v2/pokemon?offset=0&limit=${postsPerPage}`;\n\n  const lastURL = `https://pokeapi.co/api/v2/pokemon?offset=${totalPosts - postsPerPage}&limit=${postsPerPage}`;\n\n\n  useEffect(() => {\n    updateData();   \n  },[])\n\n  const  updateData = () => {\n    setCurrentPage(1);\n    setTotalPosts(890);\n    setLoading(true);\n    getData.fetchData(initialURL, async data => {\n      getData.loadingPokemons(data, setPokemonData)\n    });\n    setLoading(false);\n  }\n\n  const openData = (number) => {\n\n    const indexOfLastPost = number*postsPerPage <= 890? number*postsPerPage: 890;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n    const slicedURLArray = pokemonType.slice(indexOfFirstPost, indexOfLastPost);\n\n    getData.loadingPokemons(slicedURLArray, data => {\n      const dataWithPokemons = [];\n      data.forEach(item => {\n        dataWithPokemons.push(item)\n      });\n\n      setPokemonData(dataWithPokemons);\n    })\n\n  }\n\n  const getPokemonData = async (id) => {\n    setLoading(true);\n    \n    getData.fetchData(`https://pokeapi.co/api/v2/pokemon/${id}`, await setPokemonInfo)\n    setLoading(false);\n  }\n\n  const fetchPokemonData = async ( url) => {\n    setLoading(true);\n    getData.fetchData(url, data => getData.loadingPokemons(data, setPokemonData))\n\n    setLoading(false);\n  }\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const last = async () => {\n    setLoading(true);\n    getData.fetchData(lastURL, async data => {\n      await getData.loadingPokemons(data, setPokemonData);\n      setCurrentPage(Math.ceil(totalPosts/postsPerPage))\n    })\n    setLoading(false);\n  };\n\n  const first = async () => {\n\n    setLoading(true);\n    getData.fetchData(firstURL, async data => {\n      await getData.loadingPokemons(data, setPokemonData);\n      setCurrentPage(1)\n    })\n    \n    setLoading(false);\n  }\n\n  const filterByType = (target) => {\n    setCurrentPage(1);\n    window.scrollTo(0,0);\n\n    getData.fetchData(allTypes, ((results) => {\n      const typeName = results.find((item) => {\n        if (item.name === target ) {return item};\n      })\n      getData.fetchData(typeName.url, async ({ pokemon }) => {\n        const pokemonURLArray = []; \n        pokemon.forEach(p => {\n          pokemonURLArray.push(p.pokemon)\n        })\n        setTotalPosts(pokemonURLArray.length);\n        setPokemonType(pokemonURLArray);\n        let currentPage = 1;\n\n        const indexOfLastPost = currentPage*postsPerPage <= 890? currentPage*postsPerPage: 890;\n        const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n        const slicedURLArray = pokemonURLArray.slice(indexOfFirstPost, indexOfLastPost);\n\n        //setPokemonType(slicedURLArray);\n\n        getData.loadingPokemons(slicedURLArray, setPokemonData)        \n      })\n    }))\n  }\n\n  const filterByLocation = (target) => {\n    setCurrentPage(1);\n    setLoading(true);\n    window.scrollTo(0,0);\n\n    getData.fetchData(allLocation, (results) => {\n\n      const locationName = results.find(({ name }) => name.includes(target) );\n\n      if (locationName) {\n        getData.fetchData(locationName.url, (data) => {\n          const dataURL = data.areas[0].url;\n          getData.fetchData(dataURL, ({ pokemon_encounters }) => {\n\n            setTotalPosts(pokemon_encounters)\n            const pokemonByLocationURL = [];\n      \n            pokemon_encounters.forEach(({ pokemon }) => {\n              pokemonByLocationURL.push(pokemon);\n            })\n            getData.loadingPokemons(pokemonByLocationURL, setPokemonData)\n          })  \n        })           \n      }      \n    })\n    \n    setLoading(false);\n  }\n\n  const handleChange = () => {\n    //setSearch(e.target.value);\n    const filteredDataName = [];\n    getData.fetchData('https://pokeapi.co/api/v2/pokemon?offset=0&limit=890', data => {\n      const filteredData = data.filter(item => item.name.includes(input));\n      filteredData.forEach(item => filteredDataName.push(item.name));\n      setSearch(filteredDataName);\n      getData.loadingPokemons(filteredData, setPokemonData)      \n    })\n  }\n\n  const getEvent = (e) => {\n    const target = e.target.value.toLowerCase();\n    setInput(target);\n    const filteredDataName = [];\n    getData.fetchData('https://pokeapi.co/api/v2/pokemon?offset=0&limit=890', data => {\n      const filteredData = data.filter(item => item.name.includes(input));\n      filteredData.forEach(item => filteredDataName.push(item.name));\n      setSearch(filteredDataName);    \n    })\n  }\n\n\n  return (\n    \n      <BrowserRouter>\n\n        <main className=\"container\" >\n          <Route\n            path=\"/\"\n            render ={() =>\n              <Navbar updateData={updateData} />\n            }\n          />\n            <Switch>            \n              <Route \n                exact path='/pokedexapp/'\n                render ={() => \n                        <div className=\"main-container\">\n                          <Pagination currentPage={currentPage} postsPerPage={postsPerPage} \n                            totalPosts={totalPosts}\n                            paginate={paginate} \n                            fetchPokemonData={fetchPokemonData} \n                            first={first} last={last}\n                            openData={openData} \n                            />\n                          { loading ? <Animation /> : \n                            <PokemonList  pokemonData={pokemonData} filterByType={filterByType} getPokemonData={getPokemonData} />                        \n                          }\n                          </div>                 \n                }\n              />\n                <Route \n                  path=\"/card\"\n                  render ={() => pokemonInfo &&\n                    <PokemonCard  pokemonInfo={pokemonInfo} filterByType={filterByType} filterByLocation={filterByLocation}/>\n                  }\n                />\n            \n            <Route \n                path='/type'\n                render ={() => \n                  <div className=\"main-container\">\n                      <Pagination currentPage={currentPage} postsPerPage={postsPerPage} \n                        totalPosts={totalPosts}\n                        paginate={paginate} \n                        fetchPokemonData={fetchPokemonData} \n                        first={first} last={last}\n                        openData={openData} />\n                      { loading ? <Animation />: \n                          <PokemonList  pokemonData={pokemonData} filterByType={filterByType} getPokemonData={getPokemonData}/>\n                      }\n                  </div>                  \n                }\n            />\n\n            <Route \n                path='/location'\n                render ={() => \n                  <div className=\"main-container\">\n                      <Pagination currentPage={currentPage} postsPerPage={postsPerPage} \n                        totalPosts={totalPosts}\n                        paginate={paginate} \n                        first={first} last={last}\n                        fetchPokemonData={fetchPokemonData} \n                        openData={openData} />\n                      { loading ? <Animation /> : \n                          <PokemonList  pokemonData={pokemonData} filterByType={filterByType} getPokemonData={getPokemonData}/>\n                      }\n                  </div>                  \n                }\n            />\n\n            <Route \n                path='/search'\n                render ={() => \n                  <div className=\"main-container\">\n                    <Search handleChange={handleChange} search={search} getEvent={getEvent}/>\n                    <PokemonList  pokemonData={pokemonData} filterByType={filterByType} getPokemonData={getPokemonData} />\n                  </div>                  \n                }\n            />\n\n          </Switch>\n\n        </main >\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}