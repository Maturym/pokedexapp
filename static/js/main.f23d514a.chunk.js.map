{"version":3,"sources":["components/PokemonList/PokemonList.js","img/pikachu.svg","img/pokeball.svg","components/Navbar/Navbar.js","img/pokemon-animation.gif","App.js","index.js"],"names":["PokemonList","pokemonData","className","map","id","name","types","src","alt","type","Navbar","href","mainLogo","pokedexLogo","App","useState","setPokemonData","totalPosts","currentPage","setCurrentPage","postsPerPage","loading","setLoading","firstURL","lastURL","pageNumbers","maxLeft","maxRight","Math","ceil","i","push","url","a","axios","get","then","res","data","pokemonInfo","loadingPokemons","results","last","console","log","first","useEffect","fetchData","Promise","all","pokemon","pokemonRecord","_pokemonData","fetchPokemonData","e","target","textContent","indexOfFirstPost","animation","onClick","number","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f23d514a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './PokemonList.css';\r\n\r\nconst PokemonList = ({ pokemonData }) => {\r\n\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"cards\">\r\n        {pokemonData.map(({ id, name, types }) => (\r\n          <a key={id} className = \"card\">\r\n            <img src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt=\"\" className=\"card-img\"/>\r\n            <div className=\"card-info\">\r\n              <h3 className=\"card-id\">№{id<10 ? \"00\"+id : id>10 && id<100 ? \"0\"+id: id}</h3>\r\n              <h1 className=\"card-title\">{name}</h1>\r\n              <div className=\"card-tags\">\r\n                {types.map(({ type }) => (\r\n                  <span key={type.name} className={`card-tag background-color-${type.name}`}>{type.name}</span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </a>\r\n        ))}\r\n      </div>\r\n    \r\n    </>\r\n  )\r\n}\r\nexport default PokemonList;\r\n","export default __webpack_public_path__ + \"static/media/pikachu.f8578816.svg\";","export default __webpack_public_path__ + \"static/media/pokeball.76612ad7.svg\";","import React from 'react';\r\nimport './Navbar.css';\r\nimport mainLogo from '../../img/pikachu.svg';\r\nimport pokedexLogo from '../..//img/pokeball.svg';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n      <header>\r\n        <ul className=\"header__nav\">\r\n          <li className=\"nav__link\">\r\n            <a href=\"index.html\">\r\n              <img src={mainLogo} alt=\"main-logo\" className=\"nav__link--img\"/>\r\n              <h3 className=\"nav__link--text\">Главная</h3>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav__link\">\r\n            <a href=\"#\">\r\n              <img src={pokedexLogo} alt=\"search-logo\" className=\"nav__link--img\"/>\r\n              <h3 className=\"nav__link--text\">Покедекс</h3>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n    </header>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pokemon-animation.817f44d7.gif\";","import React, { useState, useEffect } from 'react';\nimport PokemonList from './components/PokemonList/PokemonList';\nimport Navbar from './components/Navbar/Navbar';\nimport Pagination from './components/Pagination/Pagination';\nimport animation from '../src/img/pokemon-animation.gif'\nimport axios from 'axios';\nimport './app.css';\n\n\nfunction App() {\n\n  const [pokemonData, setPokemonData] = useState([]);\n  const [totalPosts, setTotalPosts] = useState(890)\n  const [pokemonType, setPokemonType] = useState('');\n\n  // const [nextURL, setNextURL] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  // const [prevURL, setPrevURL] = useState('');\n  const [postsPerPage, setPostsPerPage] = useState(20)\n  const [loading, setLoading] = useState(true);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon';\n  const firstURL = `https://pokeapi.co/api/v2/pokemon?offset=0&limit=${postsPerPage}`;\n\n  const lastURL = `https://pokeapi.co/api/v2/pokemon?offset=${totalPosts - postsPerPage}&limit=${postsPerPage}`;\n\n  const pageNumbers = [];\n\n      \n  const maxLeft = currentPage - 3 >= 1 ? currentPage - 3 : 1;\n  const maxRight = +(currentPage + 3) <= Math.ceil(totalPosts / postsPerPage) ? currentPage + 3 : Math.ceil(totalPosts / postsPerPage);\n\n\n  \n  for (let i = maxLeft; i <=maxRight; i++){\n    pageNumbers.push(i)\n  }\n\n\n  async function fetchData(url) {\n    let pokemonInfo = await axios.get(url).then(res =>  res.data)\n    // setPrevURL(pokemonInfo.previous);\n    // setNextURL(pokemonInfo.next);\n    await loadingPokemons(pokemonInfo.results)\n    setLoading(false);\n  }\n\n  \n  const last = async () => {\n    setLoading(true);\n    let data = await axios.get(lastURL).then(res =>  res.data);\n    console.log(data.results);\n    await loadingPokemons(data.results);\n    setCurrentPage(Math.ceil(totalPosts/postsPerPage))\n    // setNextURL(data.next);\n    // setPrevURL(data.previous);\n    setLoading(false);\n  };\n\n  const first = async () => {\n\n    setLoading(true);\n    let data = await axios.get(firstURL).then(res =>  res.data);\n    await loadingPokemons(data.results);\n    setCurrentPage(1)\n    // setNextURL(data.next);\n    // setPrevURL(data.previous);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchData(initialURL);\n  },[])\n\n  const loadingPokemons = async data => {\n    let _pokemonData = await Promise.all(\n      data.map(async pokemon => {\n        let pokemonRecord = await axios.get(pokemon.url).then(res => res.data)\n        return pokemonRecord;\n      })\n    )\n    setPokemonData(_pokemonData);\n  };\n\n  const fetchPokemonData = async (e) => {\n    const target = +e.target.textContent;\n\n    setCurrentPage(target);\n\n    const indexOfLastPost = target*postsPerPage <= 890? target*postsPerPage: 890;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n\n    let data = await axios.get(`https://pokeapi.co/api/v2/pokemon?offset=${indexOfFirstPost}&limit=${postsPerPage}`).then(res => res.data)\n\n    await loadingPokemons(data.results);\n\n    // setNextURL(data.next);\n    // setPrevURL(data.previous);\n    setLoading(false);\n  }\n\n  return (\n    \n      <>\n        { loading ? <div className=\"animation-wrapper\">\n          <img className=\"animation\" src={animation} /> \n        </div> :\n        (\n        <main className=\"container\" >\n          <Navbar/>\n          <div className=\"btn\">\n             {currentPage !== 1? <button onClick={first}>First</button>: null}\n             {pageNumbers.map(number => (\n                <button key={number}\n                onClick={(e) => {\n                  setCurrentPage(e.target.textContent)\n                  fetchPokemonData(e)}}>\n                    {number}\n                </button>\n             ))}\n            {currentPage !== Math.ceil(totalPosts / postsPerPage)? <button onClick={last}>Last</button>: null}\n          </div>\n          { loading ? <div className=\"animation-wrapper\">\n          <img className=\"animation\" src={animation} /> \n        </div> :\n          <PokemonList  pokemonData={pokemonData}/>\n          }\n        </main >\n      )\n      }  \n      \n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}